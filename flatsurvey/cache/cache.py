r"""
Access cached results from previous runs.

Currently, the only cache we support is a plain-text database stored in .json
files and some accompanying Python pickles. It would be fairly trivial to
change that and allow for other similar systems as well (and we at some point
supported a GraphQL backend but it turned out to be impractical.)

EXAMPLES::

    >>> from flatsurvey.test.cli import invoke
    >>> from flatsurvey.worker.worker import worker
    >>> invoke(worker, "local-cache", "--help") # doctest: +NORMALIZE_WHITESPACE
    Usage: worker local-cache [OPTIONS]
      A cache of previous results stored in local JSON files.
    Options:
      -j, --json PATH    JSON files to read cached data from or a directory to read
                         recursively
      -p, --pickles DIR  directory of pickle files to resolve references in JSON
                         files
      --help             Show this message and exit.

"""
# *********************************************************************
#  This file is part of flatsurvey.
#
#        Copyright (C) 2020-2022 Julian RÃ¼th
#
#  flatsurvey is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  flatsurvey is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with flatsurvey. If not, see <https://www.gnu.org/licenses/>.
# *********************************************************************

import click
from pinject import copy_args_to_internal_fields

from flatsurvey.command import Command
from flatsurvey.pipeline.util import PartialBindingSpec
from flatsurvey.ui.group import GroupedCommand


class Cache(Command):
    r"""
    A cache of previous results stored in local JSON files.

    EXAMPLES::

        >>> Cache(pickles=None, jsons=(), report=None)
        local-cache

    """

    @copy_args_to_internal_fields
    def __init__(
        self,
        pickles,
        report,
        jsons=(),
    ):

        self._cache = {}

        if report is None:
            from flatsurvey.reporting import Report

            report = Report(reporters=[])

        if jsons:
            with report.progress(
                self, what="files", count=0, total=len(jsons), activity="loading cache"
            ):
                for json in jsons:
                    name = json.name if hasattr(json, "name") else "JSON"
                    report.progress(self, message=f"parsing {name}")

                    try:
                        parsed = Cache.load(json)
                    except Exception:
                        import logging

                        logging.error(f"Failed to parse {name}")
                    else:
                        for section, results in parsed.items():
                            self._cache.setdefault(section, []).extend(results)

                    report.progress(self, advance=1)

                report.progress(self, message="done")

        self._sources = [("CACHE", "DEFAULTS", "PICKLE")]
        self._defaults = [{}]
        self._shas = {}

    @staticmethod
    def load(file):
        r"""
        Load a JSON file with orjson if installed, otherwise with Python's
        standard json.
        """
        try:
            import orjson

            return orjson.loads(file.read())
        except ModuleNotFoundError:
            import json

            return json.loads(file.read())

    @classmethod
    @click.command(
        name="local-cache",
        cls=GroupedCommand,
        group="Cache",
        help=__doc__.split("EXAMPLES")[0],
    )
    @click.option(
        "--json",
        "-j",
        metavar="PATH",
        multiple=True,
        type=str,
        help="JSON files to read cached data from or a directory to read recursively",
    )
    @click.option(
        "--pickles",
        "-p",
        metavar="DIR",
        type=str,
        help="directory of pickle files to resolve references in JSON files",
    )
    def click(json, pickles):
        jsons = []

        for j in json:
            import os.path

            if os.path.isdir(j):
                for root, dirs, files in os.walk(j):
                    for f in files:
                        if f.endswith(".json"):
                            jsons.append(open(os.path.join(root, f), "rb"))
            if hasattr(j, "fileno"):
                import os

                jsons.append(os.fdopen(os.dup(j.fileno())))
            else:
                jsons.append(open(j, "rb"))

        return {"bindings": Cache.bindings(jsons, pickles)}

    @classmethod
    def bindings(cls, jsons, pickles):
        r"""
        Return the dependency injection bindings provided by this class.

        EXAMPLES::

            >>> Cache.bindings([], None)
            [cache binding to Cache]

        """
        return [
            PartialBindingSpec(Cache, name="cache", scope="SHARED")(
                jsons=jsons, pickles=pickles
            )
        ]

    def deform(self, deformation):
        r"""
        Return how this cache transforms when a deformation of the studied
        surface happens.

        Returns the original :meth:`bindings` unchanged since the cache is not
        affected by a deformation.

        EXAMPLES::

            >>> from flatsurvey.surfaces import Ngon

            >>> cache = Cache(pickles=None, jsons=(), report=None)
            >>> surface = Ngon((1, 1, 1))

        We deform the surface by doubling every edge::

            >>> from pyflatsurf import flatsurf
            >>> T = surface.flat_triangulation()
            >>> deformation = T + [T.fromHalfEdge(e.positive()) for e in T.edges()]

        The cache does not change with this deformation::

            >>> cache.deform(deformation)
            {'bindings': [cache binding to Cache]}

        """
        return {"bindings": Cache.bindings(jsons=self._jsons, pickles=self._pickles)}

    def sources(self, *sources):
        r"""
        The sources from which the cache should operate.

        If ``sources`` are given, returns a context. Instruct the cache to read
        from these sources as long as the context is active.

        If no arguments are given, return the sources the cache is currently
        using.

        EXAMPLES:

        Normally, the cache will try to read from cached data. If none is
        available, it will fall back to :meth:`defaults` if any were specified, if
        these are not available, it will try to reconstruct the cached pickle
        (which can be very slow)::

            >>> cache = Cache(pickles=None, jsons=(), report=None)
            >>> cache.sources()
            ('CACHE', 'DEFAULTS', 'PICKLE')

        We can change the order temporarily::

            >>> with cache.sources("DEFAULTS"):
            ...     cache.sources()
            ('DEFAULTS',)

        """
        if len(sources) == 0:
            return self._sources[-1]

        from contextlib import contextmanager

        @contextmanager
        def with_sources():
            self._sources.append(sources)
            try:
                yield None
            finally:
                assert self._sources[-1] is sources
                self._sources.pop()

        return with_sources()

    def unpickle(self, pickle, kind):
        r"""
        Return the ``pickle`` identified by its SHA256 by loading it from the
        pickle storage.

        The storage might have multiple buckets. The bucket for ``kind`` is
        queried, or all buckets if ``None``.

        EXAMPLES::

            >>> cache = Cache(pickles=None, jsons=(), report=None)
            >>> cache.unpickle("not-found", kind=None)
            Traceback (most recent call last):
            ...
            NotImplementedError: cannot unpickle since no pickle source has been passed to this cache

        We create some demo data to actually be able to unpickle something::

            >>> from hashlib import sha256
            >>> from pickle import dumps

            >>> sha = sha256()
            >>> pickle = dumps("stored value")
            >>> sha.update(pickle)
            >>> digest = sha.hexdigest()

        Load the cached pickle::

            >>> from flatsurvey.cache.pickles import Pickles
            >>> cache = Cache(pickles=Pickles([pickle]), report=None)
            >>> cache.unpickle(digest, kind=None)
            'stored value'

        """
        if self._pickles is None:
            raise NotImplementedError(
                "cannot unpickle since no pickle source has been passed to this cache"
            )

        return self._pickles.unpickle(pickle, kind)

    def defaults(self, defaults=None):
        r"""
        Get or set the defaults used for keys that are missing from a node.

        EXAMPLES:

        When no parameters are provided, the defaults are returned::

            >>> from io import StringIO
            >>> cache = Cache(jsons=(StringIO('{"A": [{}]}'),), pickles=None, report=None)
            >>> cache.defaults()
            {}

        Otherwise, a context is returned for whose lifetime the defaults are replaced::

            >>> with cache.defaults({"type": "B"}):
            ...     cache.defaults()
            {'type': 'B'}

        ::

            >>> with cache.defaults({"type": "B"}):
            ...     cache.get("A", single=True).type
            'B'

        """
        if defaults is None:
            return self._defaults[-1]

        from contextlib import contextmanager

        @contextmanager
        def with_defaults():
            self._defaults.append(defaults)
            try:
                yield None
            finally:
                assert self._defaults[-1] is defaults
                self._defaults.pop()

        return with_defaults()

    def get(self, section, predicate=None, single=None):
        r"""
        Return the results for ``section`` that satisfy ``predicate``.

        EXAMPLES:

        Cached results are automatically requested by a goal when
        :meth:`Goal._consume_cache` which calls this method.

        However, the cache can also be queried manually. Let's suppose that we
        have a cache from previous runs.

        The pickles in this example are huge. We should improve that, see #10::

            >>> from flatsurvey.cache.pickles import Pickles
            >>> from io import StringIO
            >>> json = '{ "orbit-closure": [ { "timestamp": "2024-06-25 00:48:11.537983+00:00", "dimension": 4, "directions": 173, "directions_with_cylinders": 172, "dense": null, "value": { "type": "GL2ROrbitClosure", "pickle": "59ab19bfb113d2f4516b9e523652e411ee38eba1ff1500ceb3982c86e374f0cb" }, "surface": { "angles": [ 3, 4, 13 ], "type": "Ngon", "pickle": "a91493bea79eb8f96deb91a0432c259a6fb9442c07dd00076b18fcd326a84811" } } ] }'
            >>> pickles = [b'\x80\x04\x95\xf3Y\x00\x00\x00\x00\x00\x00\x8c$flatsurf.geometry.gl2r_orbit_closure\x94\x8c\x10GL2ROrbitClosure\x94\x93\x94\x8c!cppyythonizations.pickling.cereal\x94\x8c\x14unpickle_from_cereal\x94\x93\x94\x8c\x12cppyy.gbl.flatsurf\x94\x8c*FlatTriangulation<eantic::renf_elem_class>\x94\x93\x94}\x94(\x8c\rcombinatorial\x94}\x94(\x8c\x06shared\x94\x8a\x05\x01\x00\x00\x80\x00\x8c\x08vertices\x94}\x94\x8c\x06cycles\x94]\x94(]\x94(J\xfd\xff\xff\xffJ\xf7\xff\xff\xffJ\xeb\xff\xff\xffK\x11J\xf0\xff\xff\xffJ\xde\xff\xff\xffK\x1cK\rJ\xf4\xff\xff\xffJ\xe5\xff\xff\xffK(J\xd9\xff\xff\xffJ\xd7\xff\xff\xffK-K&J\xdb\xff\xff\xffJ\xd2\xff\xff\xffK,K"J\xdf\xff\xff\xffJ\xd1\xff\xff\xffK*K K\x0fJ\xf2\xff\xff\xffK\x18K\x0bJ\xf6\xff\xff\xffJ\xe9\xff\xff\xffK\x12K\x08K\x03J\xfe\xff\xff\xffJ\xf9\xff\xff\xffJ\xef\xff\xff\xffJ\xdd\xff\xff\xffK\x1fJ\xe0\xff\xff\xffK\x1aK\x0cK\x05J\xfc\xff\xff\xffJ\xf5\xff\xff\xffJ\xe7\xff\xff\xffK\'K\x14K\tJ\xf8\xff\xff\xffJ\xed\xff\xff\xffJ\xda\xff\xff\xffK\x1dJ\xe4\xff\xff\xffJ\xd4\xff\xff\xffK+K\x1bJ\xe6\xff\xff\xffJ\xd6\xff\xff\xffK0K)K\x19J\xe8\xff\xff\xffJ\xe2\xff\xff\xffK%K\x13J\xee\xff\xff\xffJ\xdc\xff\xff\xffK!K\x10K\x07J\xfa\xff\xff\xffJ\xf1\xff\xff\xffJ\xe1\xff\xff\xffK\x16K\nK\x04K\x01e]\x94(J\xfb\xff\xff\xffJ\xf3\xff\xff\xffJ\xe3\xff\xff\xffJ\xd3\xff\xff\xffJ\xd0\xff\xff\xffK/K$K\x17J\xea\xff\xff\xffK#K\x15J\xec\xff\xff\xffJ\xd8\xff\xff\xffJ\xd5\xff\xff\xffK.K\x1eK\x0eK\x06K\x02J\xff\xff\xff\xffees\x8c\x05faces\x94}\x94h\x0f]\x94(]\x94(J\xfd\xff\xff\xffJ\xf7\xff\xff\xffJ\xeb\xff\xff\xffK\x11J\xf0\xff\xff\xffJ\xde\xff\xff\xffK\x1cK\rJ\xf4\xff\xff\xffJ\xe5\xff\xff\xffK(J\xd9\xff\xff\xffJ\xd7\xff\xff\xffK-K&J\xdb\xff\xff\xffJ\xd2\xff\xff\xffK,K"J\xdf\xff\xff\xffJ\xd1\xff\xff\xffK*K K\x0fJ\xf2\xff\xff\xffK\x18K\x0bJ\xf6\xff\xff\xffJ\xe9\xff\xff\xffK\x12K\x08K\x03J\xfe\xff\xff\xffJ\xf9\xff\xff\xffJ\xef\xff\xff\xffJ\xdd\xff\xff\xffK\x1fJ\xe0\xff\xff\xffK\x1aK\x0cK\x05J\xfc\xff\xff\xffJ\xf5\xff\xff\xffJ\xe7\xff\xff\xffK\'K\x14K\tJ\xf8\xff\xff\xffJ\xed\xff\xff\xffJ\xda\xff\xff\xffK\x1dJ\xe4\xff\xff\xffJ\xd4\xff\xff\xffK+K\x1bJ\xe6\xff\xff\xffJ\xd6\xff\xff\xffK0K)K\x19J\xe8\xff\xff\xffJ\xe2\xff\xff\xffK%K\x13J\xee\xff\xff\xffJ\xdc\xff\xff\xffK!K\x10K\x07J\xfa\xff\xff\xffJ\xf1\xff\xff\xffJ\xe1\xff\xff\xffK\x16K\nK\x04K\x01e]\x94(J\xfb\xff\xff\xffJ\xf3\xff\xff\xffJ\xe3\xff\xff\xffJ\xd3\xff\xff\xffJ\xd0\xff\xff\xffK/K$K\x17J\xea\xff\xff\xffK#K\x15J\xec\xff\xff\xffJ\xd8\xff\xff\xffJ\xd5\xff\xff\xffK.K\x1eK\x0eK\x06K\x02J\xff\xff\xff\xffeesu\x8c\x07vectors\x94]\x94(}\x94(\x8c\x03key\x94J\xd0\xff\xff\xff\x8c\x05value\x94}\x94(\x8c\x01x\x94}\x94(\x8c\x06parent\x94}\x94(\x8c\x02id\x94\x8a\x05\x02\x00\x00\x80\x00\x8c\x04name\x94\x8c\x02c0\x94\x8c\tembedding\x94XV\x02\x00\x00[1.9021130325903071442328786667587642868113972682515004448946112888603063401703870034375856219416227633517994351028060084179741323875393998526304245406263647575715548759408020654364342018420030361052080113904233983673374640657568402904119611880630411225822483678967203562550550806747957370410393686740683507985239396763955609778577531493647397629782806346343093426050195676544885258412276656104382540413770132733420820725022458799338979878237405139246652760227304865231789102853562711761106084471365812799695988277158617522332122964917835040707759483911134299616454276763376493547830 +/- 6.25e-581]\x94\x8c\x07minpoly\x94\x8c\x11c0^4 - 5*c0^2 + 5\x94\x8c\tprecision\x94K@uh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94u\x8c\x01y\x94}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uuu}\x94(h\x1bK0h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uuu}\x94(h\x1bJ\xd1\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uuu}\x94(h\x1bK/h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uuu}\x94(h\x1bJ\xd2\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uuu}\x94(h\x1bK.h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uuu}\x94(h\x1bJ\xd3\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uuu}\x94(h\x1bK-h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uuu}\x94(h\x1bJ\xd4\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b2*c0^3 + 3*c0^2 - 8*c0 - 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x010\x94uuu}\x94(h\x1bK,h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c-2*c0^3 - 3*c0^2 + 8*c0 + 10\x94uh+}\x94(h }\x94h"K\x02sh\x1chnuuu}\x94(h\x1bJ\xd5\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uuu}\x94(h\x1bK+h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uuu}\x94(h\x1bJ\xd6\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uuu}\x94(h\x1bK*h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uuu}\x94(h\x1bJ\xd7\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c-2*c0^3 - 3*c0^2 + 8*c0 + 10\x94uh+}\x94(h }\x94h"K\x02sh\x1chnuuu}\x94(h\x1bK)h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b2*c0^3 + 3*c0^2 - 8*c0 - 10\x94uh+}\x94(h }\x94h"K\x02sh\x1chnuuu}\x94(h\x1bJ\xd8\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uuu}\x94(h\x1bK(h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uuu}\x94(h\x1bJ\xd9\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uuu}\x94(h\x1bK\'h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uuu}\x94(h\x1bJ\xda\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uuu}\x94(h\x1bK&h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uuu}\x94(h\x1bJ\xdb\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uuu}\x94(h\x1bK%h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uuu}\x94(h\x1bJ\xdc\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uuu}\x94(h\x1bK$h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uuu}\x94(h\x1bJ\xdd\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uuu}\x94(h\x1bK#h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uuu}\x94(h\x1bJ\xde\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x11c0^2 - 1*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uuu}\x94(h\x1bK"h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-c0^2 + 1*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uuu}\x94(h\x1bJ\xdf\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uuu}\x94(h\x1bK!h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uuu}\x94(h\x1bJ\xe0\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-c0^2 + 1*c0 + 5/2\x94uuu}\x94(h\x1bK h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x11c0^2 - 1*c0 - 5/2\x94uuu}\x94(h\x1bJ\xe1\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1chnuh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b2*c0^3 + 3*c0^2 - 8*c0 - 10\x94uuu}\x94(h\x1bK\x1fh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1chnuh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c-2*c0^3 - 3*c0^2 + 8*c0 + 10\x94uuu}\x94(h\x1bJ\xe2\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uuu}\x94(h\x1bK\x0fh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uuu}\x94(h\x1bJ\xf2\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uuu}\x94(h\x1bK\x0eh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uuu}\x94(h\x1bJ\xf3\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uuu}\x94(h\x1bK\rh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uuu}\x94(h\x1bJ\xf4\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uuu}\x94(h\x1bK\x0ch\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uuu}\x94(h\x1bJ\xf5\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1a2*c0^3 + 1*c0^2 - 6*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1chnuuu}\x94(h\x1bK\x0bh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-2*c0^3 - 1*c0^2 + 6*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1chnuuu}\x94(h\x1bJ\xf6\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uuu}\x94(h\x1bK\nh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uuu}\x94(h\x1bJ\xf7\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uuu}\x94(h\x1bK\th\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uuu}\x94(h\x1bJ\xf8\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x11c0^2 - 1*c0 - 5/2\x94uuu}\x94(h\x1bK\x08h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-c0^2 + 1*c0 + 5/2\x94uuu}\x94(h\x1bJ\xf9\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uuu}\x94(h\x1bK\x01h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uuu}\x94(h\x1bJ\xff\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uuu}\x94(h\x1bK\x02h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uuu}\x94(h\x1bJ\xfe\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uuu}\x94(h\x1bK\x03h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1chnuh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c-2*c0^3 - 3*c0^2 + 8*c0 + 10\x94uuu}\x94(h\x1bJ\xfd\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1chnuh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b2*c0^3 + 3*c0^2 - 8*c0 - 10\x94uuu}\x94(h\x1bK\x04h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uuu}\x94(h\x1bJ\xfc\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uuu}\x94(h\x1bK\x05h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uuu}\x94(h\x1bJ\xfb\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uuu}\x94(h\x1bK\x06h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uuu}\x94(h\x1bJ\xfa\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uuu}\x94(h\x1bK\x07h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uuu}\x94(h\x1bJ\xf1\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uuu}\x94(h\x1bK\x10h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1a2*c0^3 + 1*c0^2 - 6*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1chnuuu}\x94(h\x1bJ\xf0\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-2*c0^3 - 1*c0^2 + 6*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1chnuuu}\x94(h\x1bK\x11h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uuu}\x94(h\x1bJ\xef\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uuu}\x94(h\x1bK\x12h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uuu}\x94(h\x1bJ\xee\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uuu}\x94(h\x1bK\x13h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1chnuh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1a2*c0^3 + 1*c0^2 - 6*c0 - 5\x94uuu}\x94(h\x1bJ\xed\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1chnuh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-2*c0^3 - 1*c0^2 + 6*c0 + 5\x94uuu}\x94(h\x1bK\x14h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uuu}\x94(h\x1bJ\xec\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-c0^3 - 1/2*c0^2 + 7/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ec0^3 + 1/2*c0^2 - 7/2*c0 - 5/2\x94uuu}\x94(h\x1bK\x15h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uuu}\x94(h\x1bJ\xeb\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uuu}\x94(h\x1bK\x16h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x111/2*c0^3 - 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uuu}\x94(h\x1bJ\xea\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-1/2*c0^3 + 3/2*c0\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uuu}\x94(h\x1bK\x17h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uuu}\x94(h\x1bJ\xe9\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uuu}\x94(h\x1bK\x18h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uuu}\x94(h\x1bJ\xe8\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uuu}\x94(h\x1bK\x19h\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x11c0^2 - 1*c0 - 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uuu}\x94(h\x1bJ\xe7\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x12-c0^2 + 1*c0 + 5/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uuu}\x94(h\x1bK\x1ah\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-1/2*c0^3 - 2*c0^2 + 5/2*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1b-c0^3 - 3/2*c0^2 + 4*c0 + 5\x94uuu}\x94(h\x1bJ\xe6\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e1/2*c0^3 + 2*c0^2 - 5/2*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1ac0^3 + 3/2*c0^2 - 4*c0 - 5\x94uuu}\x94(h\x1bK\x1bh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e2*c0^3 + 3*c0^2 - 15/2*c0 - 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 1/2*c0^2 + 3*c0 + 5/2\x94uuu}\x94(h\x1bJ\xe5\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1f-2*c0^3 - 3*c0^2 + 15/2*c0 + 10\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 1/2*c0^2 - 3*c0 - 5/2\x94uuu}\x94(h\x1bK\x1ch\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1e-2*c0^3 - 2*c0^2 + 7*c0 + 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1c3/2*c0^3 + 1*c0^2 - 5*c0 - 5\x94uuu}\x94(h\x1bJ\xe4\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d2*c0^3 + 2*c0^2 - 7*c0 - 15/2\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-3/2*c0^3 - 1*c0^2 + 5*c0 + 5\x94uuu}\x94(h\x1bK\x1dh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1cc0^3 + 3/2*c0^2 - 7/2*c0 - 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uuu}\x94(h\x1bJ\xe3\xff\xff\xffh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c"1/2*c0^3 + 1/2*c0^2 - 3/2*c0 - 5/2\x94uuu}\x94(h\x1bK\x1eh\x1c}\x94(h\x1e}\x94(h }\x94h"K\x02sh\x1c\x8c\x1d-c0^3 - 3/2*c0^2 + 7/2*c0 + 5\x94uh+}\x94(h }\x94h"K\x02sh\x1c\x8c#-1/2*c0^3 - 1/2*c0^2 + 3/2*c0 + 5/2\x94uuueu]\x94\x8c\x13flatsurf/cereal.hpp\x94a\x87\x94R\x94\x85\x94R\x94}\x94(\x8c\x02_U\x94\x8c\x13sage.matrix.matrix0\x94\x8c\x08unpickle\x94\x93\x94(\x8c sage.matrix.matrix_generic_dense\x94\x8c\x14Matrix_generic_dense\x94\x93\x94\x8c$sage.structure.unique_representation\x94\x8c\x08unreduce\x94\x93\x94\x8c\x18sage.matrix.matrix_space\x94\x8c\x0bMatrixSpace\x94\x93\x94(\x8c\x16sage.structure.factory\x94\x8c\x18generic_factory_unpickle\x94\x93\x94(j.\x03\x00\x00\x8c\rlookup_global\x94\x93\x94\x8c9sage.rings.number_field.number_field.NumberField_version2\x94\x85\x94R\x94K\nK\x03\x86\x94(\x8c\x19sage.rings.rational_field\x94\x8c\rRationalField\x94\x93\x94)R\x94\x8c/sage.rings.polynomial.polynomial_rational_flint\x94\x8c\x19Polynomial_rational_flint\x94\x93\x94(\x8c1sage.rings.polynomial.polynomial_ring_constructor\x94\x8c\x17unpickle_PolynomialRing\x94\x93\x94(j:\x03\x00\x00\x8c\x01x\x94\x85\x94N\x89t\x94R\x94]\x94(\x8c\x13sage.rings.rational\x94\x8c\rmake_rational\x94\x93\x94\x8c\x015\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x011\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x8c\x02c0\x94\x85\x94\x8c\x1csage.structure.dynamic_class\x94\x8c\rdynamic_class\x94\x93\x94(\x8c AlgebraicRealField_with_category\x94\x8c\x10sage.rings.qqbar\x94\x8c\x12AlgebraicRealField\x94\x93\x94\x8c\x08builtins\x94\x8c\x07getattr\x94\x93\x94j*\x03\x00\x00\x8c\x18sage.categories.category\x94\x8c\x0cJoinCategory\x94\x93\x94\x8c\x0esage.misc.call\x94\x8c\x0bcall_method\x94\x93\x94ji\x03\x00\x00ji\x03\x00\x00ji\x03\x00\x00ji\x03\x00\x00ji\x03\x00\x00ji\x03\x00\x00ji\x03\x00\x00ji\x03\x00\x00j*\x03\x00\x00\x8c*sage.categories.magmas_and_additive_magmas\x94\x8c\x17MagmasAndAdditiveMagmas\x94\x93\x94)}\x94\x87\x94R\x94\x8c\x0b_with_axiom\x94\x8c\x0cDistributive\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x13AdditiveAssociative\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x13AdditiveCommutative\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x0eAdditiveUnital\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x0bAssociative\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x0fAdditiveInverse\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x06Unital\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x08Division\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x0bCommutative\x94\x87\x94R\x94ji\x03\x00\x00j*\x03\x00\x00\x8c\x18sage.categories.sets_cat\x94\x8c\x04Sets\x94\x93\x94)}\x94\x87\x94R\x94jp\x03\x00\x00\x8c\x08Infinite\x94\x87\x94R\x94\x86\x94\x85\x94}\x94\x87\x94R\x94\x8c\x0cparent_class\x94\x86\x94R\x94\x86\x94NNj`\x03\x00\x00t\x94R\x94)R\x94j^\x03\x00\x00\x8c\rAlgebraicReal\x94\x93\x94j^\x03\x00\x00\x8c\x12ANExtensionElement\x94\x93\x94j^\x03\x00\x00\x8c\x12AlgebraicGenerator\x94\x93\x94j0\x03\x00\x00(j5\x03\x00\x00j6\x03\x00\x00(j:\x03\x00\x00j=\x03\x00\x00(j@\x03\x00\x00(j:\x03\x00\x00\x8c\x01y\x94\x85\x94N\x89t\x94R\x94]\x94(jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x02-c\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x01j\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x02-8\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x8c\x01a\x94\x85\x94Nj\xc3\x03\x00\x00N\x89Nt\x94}\x94\x8c\x05check\x94\x89st\x94R\x94j^\x03\x00\x00\x8c\x06ANRoot\x94\x93\x94j^\x03\x00\x00\x8c\x1aAlgebraicPolynomialTracker\x94\x93\x94j=\x03\x00\x00(j\xaa\x03\x00\x00]\x94(jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x02-c\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00j\xb5\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x02-8\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x85\x94R\x94\x8c\x14sage.rings.real_mpfi\x94\x8c+__create__RealIntervalFieldElement_version1\x94\x93\x94j\xe7\x03\x00\x00\x8c$__create__RealIntervalField_version0\x94\x93\x94K\x80\x89\x86\x94R\x94\x8c\x14sage.rings.real_mpfr\x94\x8c\x1d__create__RealNumber_version0\x94\x93\x94j\xee\x03\x00\x00\x8c\x1c__create__RealField_version0\x94\x93\x94K\x80\x89\x8c\x04RNDU\x94\x87\x94R\x94\x8c\x1e1.v6p4ignu8msq5hn483j7cijmco@0\x94K \x87\x94R\x94j\xf0\x03\x00\x00j\xf2\x03\x00\x00K\x80\x89\x8c\x04RNDD\x94\x87\x94R\x94\x8c\x1e1.v6p4ignu8msq5hn483j7cijm9o@0\x94K \x87\x94R\x94\x87\x94R\x94K\x01\x87\x94R\x94\x86\x94R\x94\x8c,sage.rings.number_field.number_field_element\x94\x8c\x1bNumberFieldElement_absolute\x94\x93\x94j\xc9\x03\x00\x00j=\x03\x00\x00(j@\x03\x00\x00(j:\x03\x00\x00jA\x03\x00\x00\x85\x94N\x89t\x94R\x94]\x94(jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94\x86\x94R\x94\x85\x94R\x94\x86\x94\x8c\x05c_{0}\x94N\x89Nt\x94}\x94j\xc7\x03\x00\x00\x88st\x94R\x94K\x11K\x11\x89j\'\x03\x00\x00t\x94}\x94\x87\x94R\x94\x89N]\x94(j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x035/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x013\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-1/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x035/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x033/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-1/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-1/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-3\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-3\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x033/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-7/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-6\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x012\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-f/2\x94\x85\x94R\x94jH\x03\x00\x00j*\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x03f/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x017\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-f/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-7\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-f/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-7\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x037/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-f/2\x94\x85\x94R\x94jH\x03\x00\x00j*\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x037/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x037/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-f/2\x94\x85\x94R\x94jH\x03\x00\x00j*\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-f/2\x94\x85\x94R\x94jH\x03\x00\x00j*\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x03f/2\x94\x85\x94R\x94jH\x03\x00\x00j\xee\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-7/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x03f/2\x94\x85\x94R\x94jH\x03\x00\x00j\xee\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-6\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-7/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x033/2\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x033/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x035/2\x94\x85\x94R\x94jH\x03\x00\x00j*\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x04-1/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x033/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x033/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04-5/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-3/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x031/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x01a\x94\x85\x94R\x94jH\x03\x00\x00j\xab\x06\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00j\xab\x06\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xab\x06\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jS\x03\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00hn\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-5\x94\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j\xa2\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00jI\x03\x00\x00\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x02-a\x94\x85\x94R\x94jH\x03\x00\x00j*\x04\x00\x00\x85\x94R\x94jH\x03\x00\x00j*\x04\x00\x00\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-1koo\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-s8r\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x041664\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x03kei\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x049lr0\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x0455uf\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-706s\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3o28\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x047bg8\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x043u3p\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-5adc\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-2r86\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-68jc\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3bdv\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x044h58\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x042dnh\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-68jc\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3bdv\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x044h58\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x042dnh\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04797o\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x043ss8\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-58oo\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-2qbq\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x049090\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x044qck\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-6gjg\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3fmo\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-4jqk\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-2f54\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x043av4\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x041p8v\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-1koo\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04-s8r\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x041664\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x03kei\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-eoe4\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-7sur\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x04alrg\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x045n1j\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-7bg8\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3u3p\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x045adc\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x042r86\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04a4jg\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x045dpn\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-7asc\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3tok\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x044jqk\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x042f54\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3av4\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-1p8v\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x04797o\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x043ss8\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-58oo\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-2qbq\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x045gos\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x042ukj\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3vt8\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-24fl\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x05-797o\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3ss8\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x0458oo\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x042qbq\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94(jH\x03\x00\x00\x8c\x044skg\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x042jq1\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-3hak\x94\x85\x94R\x94jH\x03\x00\x00\x8c\x05-1slc\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94j\x07\x04\x00\x00j \x04\x00\x00j=\x03\x00\x00(j\n\x04\x00\x00]\x94\x89\x89t\x94R\x94\x86\x94R\x94j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00j\x1a\t\x00\x00eK\x00t\x94R\x94\x8c\x07_U_rank\x94K\x04ub.', b'\x80\x04\x95h\r\x00\x00\x00\x00\x00\x00\x8c\x19flatsurvey.surfaces.ngons\x94\x8c\x04Ngon\x94\x93\x94]\x94(K\x03K\x04K\re\x8c\x07e-antic\x94\x8c\x1csage.structure.dynamic_class\x94\x8c\rdynamic_class\x94\x93\x94(\x8c\x1eEuclideanPolygon_with_category\x94\x8c\x19flatsurf.geometry.polygon\x94\x8c\x10EuclideanPolygon\x94\x93\x94\x8c\x08builtins\x94\x8c\x07getattr\x94\x93\x94\x8c$sage.structure.unique_representation\x94\x8c\x08unreduce\x94\x93\x94\x8c\x18sage.categories.category\x94\x8c\x0cJoinCategory\x94\x93\x94\x8c\x0esage.misc.call\x94\x8c\x0bcall_method\x94\x93\x94h\x11\x8c;flatsurf.geometry.categories.euclidean_polygons_with_angles\x94\x8c\x1bEuclideanPolygonsWithAngles\x94\x93\x94\x8c\x16sage.structure.factory\x94\x8c\x18generic_factory_unpickle\x94\x93\x94(h\x1b\x8c\rlookup_global\x94\x93\x94\x8c9sage.rings.number_field.number_field.NumberField_version2\x94\x85\x94R\x94K\nK\x03\x86\x94(\x8c\x19sage.rings.rational_field\x94\x8c\rRationalField\x94\x93\x94)R\x94\x8c/sage.rings.polynomial.polynomial_rational_flint\x94\x8c\x19Polynomial_rational_flint\x94\x93\x94(\x8c1sage.rings.polynomial.polynomial_ring_constructor\x94\x8c\x17unpickle_PolynomialRing\x94\x93\x94(h\'\x8c\x01x\x94\x85\x94N\x89t\x94R\x94]\x94(\x8c\x13sage.rings.rational\x94\x8c\rmake_rational\x94\x93\x94\x8c\x015\x94\x85\x94R\x94h5\x8c\x010\x94\x85\x94R\x94h5\x8c\x02-5\x94\x85\x94R\x94h5h9\x85\x94R\x94h5\x8c\x011\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x8c\x02c0\x94\x85\x94h\x07(\x8c AlgebraicRealField_with_category\x94\x8c\x10sage.rings.qqbar\x94\x8c\x12AlgebraicRealField\x94\x93\x94h\x0eh\x11h\x14h\x17h\x17h\x17h\x17h\x17h\x17h\x17h\x17h\x17h\x11\x8c*sage.categories.magmas_and_additive_magmas\x94\x8c\x17MagmasAndAdditiveMagmas\x94\x93\x94)}\x94\x87\x94R\x94\x8c\x0b_with_axiom\x94\x8c\x0cDistributive\x94\x87\x94R\x94hR\x8c\x13AdditiveAssociative\x94\x87\x94R\x94hR\x8c\x13AdditiveCommutative\x94\x87\x94R\x94hR\x8c\x0eAdditiveUnital\x94\x87\x94R\x94hR\x8c\x0bAssociative\x94\x87\x94R\x94hR\x8c\x0fAdditiveInverse\x94\x87\x94R\x94hR\x8c\x06Unital\x94\x87\x94R\x94hR\x8c\x08Division\x94\x87\x94R\x94hR\x8c\x0bCommutative\x94\x87\x94R\x94h\x17h\x11\x8c\x18sage.categories.sets_cat\x94\x8c\x04Sets\x94\x93\x94)}\x94\x87\x94R\x94hR\x8c\x08Infinite\x94\x87\x94R\x94\x86\x94\x85\x94}\x94\x87\x94R\x94\x8c\x0cparent_class\x94\x86\x94R\x94\x86\x94NNhKt\x94R\x94)R\x94hI\x8c\rAlgebraicReal\x94\x93\x94hI\x8c\x12ANExtensionElement\x94\x93\x94hI\x8c\x12AlgebraicGenerator\x94\x93\x94h\x1d(h"h#(h\'h*(h-(h\'\x8c\x01y\x94\x85\x94N\x89t\x94R\x94]\x94(h5hA\x85\x94R\x94h5h9\x85\x94R\x94h5\x8c\x02-c\x94\x85\x94R\x94h5h9\x85\x94R\x94h5\x8c\x01j\x94\x85\x94R\x94h5h9\x85\x94R\x94h5\x8c\x02-8\x94\x85\x94R\x94h5h9\x85\x94R\x94h5hA\x85\x94R\x94e\x89\x89t\x94R\x94\x8c\x01a\x94\x85\x94Nh\xa5N\x89Nt\x94}\x94\x8c\x05check\x94\x89st\x94R\x94hI\x8c\x06ANRoot\x94\x93\x94hI\x8c\x1aAlgebraicPolynomialTracker\x94\x93\x94h*(h\x8c]\x94(h5hA\x85\x94R\x94h5h9\x85\x94R\x94h5\x8c\x02-c\x94\x85\x94R\x94h5h9\x85\x94R\x94h5h\x97\x85\x94R\x94h5h9\x85\x94R\x94h5\x8c\x02-8\x94\x85\x94R\x94h5h9\x85\x94R\x94h5hA\x85\x94R\x94e\x89\x89t\x94R\x94\x85\x94R\x94\x8c\x14sage.rings.real_mpfi\x94\x8c+__create__RealIntervalFieldElement_version1\x94\x93\x94h\xc9\x8c$__create__RealIntervalField_version0\x94\x93\x94K\x80\x89\x86\x94R\x94\x8c\x14sage.rings.real_mpfr\x94\x8c\x1d__create__RealNumber_version0\x94\x93\x94h\xd0\x8c\x1c__create__RealField_version0\x94\x93\x94K\x80\x89\x8c\x04RNDU\x94\x87\x94R\x94\x8c\x1e1.v6p4ignu8msq5hn483j7cijmco@0\x94K \x87\x94R\x94h\xd2h\xd4K\x80\x89\x8c\x04RNDD\x94\x87\x94R\x94\x8c\x1e1.v6p4ignu8msq5hn483j7cijm9o@0\x94K \x87\x94R\x94\x87\x94R\x94K\x01\x87\x94R\x94\x86\x94R\x94\x8c,sage.rings.number_field.number_field_element\x94\x8c\x1bNumberFieldElement_absolute\x94\x93\x94h\xabh*(h-(h\'h.\x85\x94N\x89t\x94R\x94]\x94(h5\x8c\x02-2\x94\x85\x94R\x94h5h9\x85\x94R\x94h5hA\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94\x86\x94R\x94\x85\x94R\x94\x86\x94\x8c\x05c_{0}\x94N\x89Nt\x94}\x94h\xa9\x88st\x94R\x94h5\x8c\x043/18\x94\x85\x94R\x94h5\x8c\x031/a\x94\x85\x94R\x94h5\x8c\x04d/18\x94\x85\x94R\x94\x87\x94\x86\x94}\x94\x87\x94R\x94hR\x8c\x06Simple\x94\x87\x94R\x94h\x17h\x17h\x11\x8c/flatsurf.geometry.categories.euclidean_polygons\x94\x8c\x11EuclideanPolygons\x94\x93\x94j\x02\x01\x00\x00\x85\x94}\x94\x87\x94R\x94hR\x8c\x06Simple\x94\x87\x94R\x94hR\x8c\x06Convex\x94\x87\x94R\x94\x86\x94\x85\x94}\x94\x87\x94R\x94h|\x86\x94R\x94\x86\x94NNh\x0bt\x94R\x94)\x81\x94}\x94(\x8c\x02_v\x94\x8c sage.modules.free_module_element\x94\x8c\'make_FreeModuleElement_generic_dense_v1\x94\x93\x94(h\x1d(h\x1f\x8c\nFreeModule\x94\x85\x94R\x94h#(j\x02\x01\x00\x00K\x02\x89Nt\x94}\x94t\x94R\x94]\x94(h\xe9j\x02\x01\x00\x00h*(h\xec]\x94\x89\x89t\x94R\x94\x86\x94R\x94h\xe9j\x02\x01\x00\x00h*(h\xec]\x94\x89\x89t\x94R\x94\x86\x94R\x94eK\x02\x89t\x94R\x94j0\x01\x00\x00(j7\x01\x00\x00]\x94(h\xe9j\x02\x01\x00\x00h*(h\xec]\x94h5hA\x85\x94R\x94a\x89\x89t\x94R\x94\x86\x94R\x94h\xe9j\x02\x01\x00\x00h*(h\xec]\x94\x89\x89t\x94R\x94\x86\x94R\x94eK\x02\x89t\x94R\x94j0\x01\x00\x00(j7\x01\x00\x00]\x94(h\xe9j\x02\x01\x00\x00h*(h\xec]\x94(h5h9\x85\x94R\x94h5\x8c\x04-3/2\x94\x85\x94R\x94h5h9\x85\x94R\x94h5\x8c\x031/2\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94h\xe9j\x02\x01\x00\x00h*(h\xec]\x94(h5h6\x85\x94R\x94h5\x8c\x014\x94\x85\x94R\x94h5\x8c\x04-3/2\x94\x85\x94R\x94h5\x8c\x02-1\x94\x85\x94R\x94e\x89\x89t\x94R\x94\x86\x94R\x94eK\x02\x89t\x94R\x94\x87\x94\x8c\x17_abstract_element_class\x94h\x0ej%\x01\x00\x00\x8c\relement_class\x94\x86\x94R\x94jx\x01\x00\x00h\x07(\x8c,EuclideanPolygon_with_category.element_class\x94h\t\x8c\x15EuclideanPolygonPoint\x94\x93\x94jz\x01\x00\x00\x86\x94NNNt\x94R\x94\x8c\x15_element_constructor_\x94\x8c\x11sage.misc.fpickle\x94\x8c\x0eunpickleMethod\x94\x93\x94\x8c\'_element_constructor_from_element_class\x94j+\x01\x00\x00j*\x01\x00\x00\x87\x94R\x94\x8c\t_category\x94j%\x01\x00\x00\x8c\x05_base\x94j\x02\x01\x00\x00\x8c\x06_names\x94N\x8c\x0f_pickle_version\x94K\x01\x8c\n_embedding\x94N\x8c\x14_element_constructor\x94j\x87\x01\x00\x00\x8c\x14_convert_method_name\x94N\x8c\x19_element_init_pass_parent\x94\x89\x8c\x14_initial_coerce_list\x94]\x94\x8c\x14_initial_action_list\x94]\x94\x8c\x15_initial_convert_list\x94]\x94ub\x87\x94R\x94.']
            >>> cache = Cache(jsons=[StringIO(json)], pickles=Pickles(pickles), report=None)

        Then we can query all cached results for a goal::

            >>> from flatsurvey.jobs import OrbitClosure
            >>> cache.get(OrbitClosure)
            [{'timestamp': '2024-06-25 00:48:11.537983+00:00', 'dimension': 4, 'directions': 173, 'directions_with_cylinders': 172, 'dense': None, 'value': {'type': 'GL2ROrbitClosure', 'pickle': '59ab19bfb113d2f4516b9e523652e411ee38eba1ff1500ceb3982c86e374f0cb'}, 'surface': {'angles': [3, 4, 13], 'type': 'Ngon', 'pickle': 'a91493bea79eb8f96deb91a0432c259a6fb9442c07dd00076b18fcd326a84811'}}]

        We can filter the results further by specifying a predicate::

            >>> len(cache.get(OrbitClosure, predicate=lambda entry: entry.dense is not True)) == 1
            True

        Or, if we only want results for a specific surface (the ``cache=cache``
        parameter is optional but speeds up searches a lot)::

            >>> from flatsurvey.surfaces import Ngon
            >>> surface = Ngon((1, 2, 4))
            >>> cache.get(OrbitClosure, predicate=surface.cache_predicate(exact=False, cache=cache))
            []
            >>> surface = Ngon((3, 4, 13))
            >>> cache.get(OrbitClosure, predicate=surface.cache_predicate(exact=False, cache=cache))
            [{'timestamp': '2024-06-25 00:48:11.537983+00:00', 'dimension': 4, 'directions': 173, 'directions_with_cylinders': 172, 'dense': None, 'value': {'type': 'GL2ROrbitClosure', 'pickle': '59ab19bfb113d2f4516b9e523652e411ee38eba1ff1500ceb3982c86e374f0cb'}, 'surface': {'angles': [3, 4, 13], 'type': 'Ngon', 'pickle': 'a91493bea79eb8f96deb91a0432c259a6fb9442c07dd00076b18fcd326a84811'}}]

        The above returns the results for any ngon with such angles. To only
        accept results for surfaces that are exactly the same, we can use the
        ``exact`` keyword; however this is not implemented yet::

            >>> cache.get(OrbitClosure, predicate=surface.cache_predicate(exact=True))
            Traceback (most recent call last):
            ...
            NotImplementedError: exact filtering is not supported yet

        We can also only look at results for surfaces with certain properties::

            >>> cache.get(OrbitClosure, predicate=lambda entry: entry.dense is not True)
            [{'timestamp': '2024-06-25 00:48:11.537983+00:00', 'dimension': 4, 'directions': 173, 'directions_with_cylinders': 172, 'dense': None, 'value': {'type': 'GL2ROrbitClosure', 'pickle': '59ab19bfb113d2f4516b9e523652e411ee38eba1ff1500ceb3982c86e374f0cb'}, 'surface': {'angles': [3, 4, 13], 'type': 'Ngon', 'pickle': 'a91493bea79eb8f96deb91a0432c259a6fb9442c07dd00076b18fcd326a84811'}}]

        Note that the above operation could be expensive because it needs to
        restore the pickle of the orbit closure where "dense" was not included
        in the cache. Instead, we can tell the cache to ignore pickles for
        "dense" and assume a default value instead::

            >>> with cache.defaults({"dense": None}):
            ...     with cache.sources("CACHE", "DEFAULTS"):
            ...         cache.get(OrbitClosure, predicate=lambda entry: entry.dense is not True)
            [{'timestamp': '2024-06-25 00:48:11.537983+00:00', 'dimension': 4, 'directions': 173, 'directions_with_cylinders': 172, 'dense': None, 'value': {'type': 'GL2ROrbitClosure', 'pickle': '59ab19bfb113d2f4516b9e523652e411ee38eba1ff1500ceb3982c86e374f0cb'}, 'surface': {'angles': [3, 4, 13], 'type': 'Ngon', 'pickle': 'a91493bea79eb8f96deb91a0432c259a6fb9442c07dd00076b18fcd326a84811'}}]

        We can also use more elaborate queries on the underlying objects,
        again, these could be very costly::

            >>> cache.get(OrbitClosure, predicate=lambda entry: entry.dimension != entry.surface.orbit_closure_dimension_upper_bound)
            [{'timestamp': '2024-06-25 00:48:11.537983+00:00', 'dimension': 4, 'directions': 173, 'directions_with_cylinders': 172, 'dense': None, 'value': {'type': 'GL2ROrbitClosure', 'pickle': '59ab19bfb113d2f4516b9e523652e411ee38eba1ff1500ceb3982c86e374f0cb'}, 'surface': {'angles': [3, 4, 13], 'type': 'Ngon', 'pickle': 'a91493bea79eb8f96deb91a0432c259a6fb9442c07dd00076b18fcd326a84811'}}]


        """
        if isinstance(section, (type, Command)):
            section = section.name()

        if predicate is None:

            def predicate(node):
                return True

        if isinstance(predicate, str):
            if single is None:
                single = True

            results = [self._from_sha(section, predicate)]
        else:
            if single is None:
                single = False

            results = []

            for entry in self._cache.get(section, []):
                node = self.make(entry, section)

                if not predicate(node):
                    continue

                results.append(node)

        if single:
            if len(results) > 1:
                raise ValueError(
                    f"expected at most one result but found {len(results)}"
                )

            if len(results) == 0:
                raise KeyError

            return results[0]

        return results

    def _from_sha(self, section, sha):
        r"""
        Return the entry whose pickle SHA is ``sha`` from the ``section`` of
        the cache.

        EXAMPLES::

            >>> from io import StringIO
            >>> cache = Cache(jsons=(StringIO('''{"surface": [{
            ...   "pickle": "some-unique-pickle-hash"
            ... }]}'''),), pickles=None, report=None)

            >>> cache._from_sha("surface", "some-unique-pickle-hash")
            {'pickle': 'some-unique-pickle-hash'}

        """
        if section not in self._shas:
            self._shas[section] = {
                entry["pickle"]: entry for entry in self._cache[section]
            }

        return self.make(self._shas[section][sha], section)

    def make(self, value, name, kind=None):
        r"""
        Return a cache node for ``name`` holding ``value`` of type ``kind``.

        EXAMPLES::

            >>> from io import StringIO
            >>> cache = Cache(jsons=(StringIO('''{"surface": [{
            ...   "pickle": "some-unique-pickle-hash"
            ... }]}'''),), pickles=None, report=None)

            >>> cache.make({"dimension": 1337}, "OrbitClosure")
            {'dimension': 1337}

        Lists are unpacked into lists of cache nodes::

            >>> cache.make([{"dimension": 13}, {"dimension": 37}], "OrbitClosures")
            [{'dimension': 13}, {'dimension': 37}]

        Some specific ``name``s references cache nodes of a different kind::

            >>> cache.make("some-unique-pickle-hash", "surface")
            {'pickle': 'some-unique-pickle-hash'}

        """
        if kind is None:
            if isinstance(value, dict) and "type" in value:
                kind = value["type"]
            else:
                kind = name

        if value is None:
            return None

        if isinstance(value, list):
            if name.endswith("s"):
                name = name[:-1]
            else:
                name = None
            return [self.make(v, name=name) for v in value]

        if isinstance(value, str) and name in ["surface"]:
            from flatsurvey.cache.node import ReferenceNode

            return ReferenceNode(value, "surface", cache=self)

        if isinstance(value, (bool, int, str)):
            return value

        from flatsurvey.cache.node import Node

        return Node(value, cache=self, kind=kind)
